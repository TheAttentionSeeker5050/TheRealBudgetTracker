{"ast":null,"code":"var _jsxFileName = \"/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js\";\nimport React, { useState } from \"react\";\nimport { EntriesLog, EntryItem } from './EntriesLog';\nimport { ChangeDateButtons } from \"./ChangeDateButtons\"; // the api rest framework\n\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(\"/api/entries/\").then(res => {\n        this.setState({\n          todoList: res.data\n        });\n      }).then(res => console.log(\"rendering list\")).then(() => {\n        const date = new Date();\n        this.setState({\n          month: date.getMonth()\n        });\n        this.setState({\n          month: date.getFullYear()\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      entryList: [],\n      modal: false,\n      month: \"\",\n      year: \"\",\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      }\n    }; // this.date= new Date()\n  } // const entry_list = []\n  // we set this in order to render the component \n\n\n  componentDidMount() {\n    this.refreshList();\n  } // componentNeedsUpdate\n  // const [entryList, setEntryList] = useState([])\n  // const [month, setMonth] = useState(\"\")\n  // const [year, setYear] = useState(\"\")\n\n\n  // const date = new Date()\n  // console.log(date.getFullYear());\n  // console.log(date.getMonth());\n  // setMonth(date.getMonth())\n  // we get or refresh list\n  // var startDate = \"2022-01-01\"\n  // var endDate = \"2022-02-01\"\n  // createEntryList = () => {\n  //   const entryList = this.state.EntryList\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ChangeDateButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(EntriesLog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.state.todoList.filter(function (list) {\n      return list.date >= startDate && list.date < endDate;\n    }).map(entry => /*#__PURE__*/React.createElement(EntryItem, {\n      entry_type: entry.entry_type,\n      description: entry.description,\n      category: entry.category,\n      date: entry.date,\n      amount: entry.amount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport { AppBody };","map":{"version":3,"sources":["/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js"],"names":["React","useState","EntriesLog","EntryItem","ChangeDateButtons","axios","AppBody","Component","constructor","props","refreshList","get","then","res","setState","todoList","data","console","log","date","Date","month","getMonth","getFullYear","catch","err","state","entryList","modal","year","activeItem","title","description","completed","componentDidMount","render","filter","list","startDate","endDate","map","entry","entry_type","category","amount"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AAEA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,cAApC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,WA9BmB,GA8BL,MAAM;AAElBL,MAAAA,KAAK,CACJM,GADD,CACK,eADL,EAECC,IAFD,CAEOC,GAAD,IAAS;AACb,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEF,GAAG,CAACG;AAAf,SAAd;AACD,OAJD,EAKCJ,IALD,CAKOC,GAAD,IAAQI,OAAO,CAACC,GAAR,CAAY,gBAAZ,CALd,EAMCN,IAND,CAMM,MAAM;AACV,cAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,aAAKN,QAAL,CAAc;AAACO,UAAAA,KAAK,EAACF,IAAI,CAACG,QAAL;AAAP,SAAd;AACA,aAAKR,QAAL,CAAc;AAACO,UAAAA,KAAK,EAACF,IAAI,CAACI,WAAL;AAAP,SAAd;AACD,OAVD,EAWCC,KAXD,CAWQC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAXhB;AAYD,KA5CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXP,MAAAA,KAAK,EAAC,EAHK;AAIXQ,MAAAA,IAAI,EAAC,EAJM;AAKXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,WAAW,EAAE,EAFH;AAGVC,QAAAA,SAAS,EAAE;AAHD;AALD,KAAb,CAFiB,CAajB;AACD,GAfmC,CAiBtC;AAEE;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,WAAL;AACD,GAtBmC,CAwBpC;AAEF;AACA;AACA;;;AAwBE;AACA;AACA;AACA;AAIA;AAGA;AACA;AAGA;AACA;AAEA;AAKAyB,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKT,KAAL,CAAWX,QAAX,CACEqB,MADF,CACS,UAAUC,IAAV,EAAgB;AACtB,aAAOA,IAAI,CAAClB,IAAL,IAAamB,SAAb,IAA2BD,IAAI,CAAClB,IAAL,GAAYoB,OAA9C;AACD,KAHF,EAIEC,GAJF,CAKIC,KAAD,iBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAEA,KAAK,CAACC,UADpB;AAEE,MAAA,WAAW,EAAED,KAAK,CAACT,WAFrB;AAGE,MAAA,QAAQ,EAAES,KAAK,CAACE,QAHlB;AAIE,MAAA,IAAI,EAAEF,KAAK,CAACtB,IAJd;AAKE,MAAA,MAAM,EAAEsB,KAAK,CAACG,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL,CAFH,CAHF,CADA;AAyBD;;AApGmC;;AA0GtC,SAAQtC,OAAR","sourcesContent":["import React,  { useState } from \"react\";\n\nimport {EntriesLog, EntryItem} from './EntriesLog';\nimport {ChangeDateButtons} from \"./ChangeDateButtons\";\n\n// the api rest framework\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entryList: [],\n      modal: false,\n      month:\"\",\n      year:\"\",\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n    // this.date= new Date()\n  }\n\n// const entry_list = []\n\n  // we set this in order to render the component \n  componentDidMount() {\n    this.refreshList();\n  }\n\n  // componentNeedsUpdate\n\n// const [entryList, setEntryList] = useState([])\n// const [month, setMonth] = useState(\"\")\n// const [year, setYear] = useState(\"\")\n\n\n  refreshList = () => {\n\n    axios\n    .get(\"/api/entries/\")\n    .then((res) => { \n      this.setState({todoList: res.data})\n    })\n    .then((res)=> console.log(\"rendering list\"))\n    .then(() => {\n      const date = new Date();\n      this.setState({month:date.getMonth()});\n      this.setState({month:date.getFullYear()})\n    })\n    .catch((err) => console.log(err));\n  }\n\n\n  \n\n\n  \n  // const date = new Date()\n  // console.log(date.getFullYear());\n  // console.log(date.getMonth());\n  // setMonth(date.getMonth())\n\n  \n\n  // we get or refresh list\n  \n\n  // var startDate = \"2022-01-01\"\n  // var endDate = \"2022-02-01\"\n\n  \n  // createEntryList = () => {\n  //   const entryList = this.state.EntryList\n\n  // }\n\n  \n\n\n  render() {\n    return (\n    <div className=\"app_body\">\n      <ChangeDateButtons/>\n\n      <EntriesLog>\n        \n        {this.state.todoList\n          .filter(function (list) {\n            return list.date >= startDate  && list.date < endDate\n          })\n          .map(\n            (entry) => (\n              <EntryItem\n                entry_type={entry.entry_type}\n                description={entry.description}\n                category={entry.category}\n                date={entry.date}\n                amount={entry.amount}\n              />\n          )\n        )}\n\n      </EntriesLog>\n    </div>\n    )\n  }\n\n\n\n}\n\nexport {AppBody};"]},"metadata":{},"sourceType":"module"}