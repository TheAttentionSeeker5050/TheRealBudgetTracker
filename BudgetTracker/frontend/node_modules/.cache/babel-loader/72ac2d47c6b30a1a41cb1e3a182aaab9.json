{"ast":null,"code":"var _jsxFileName = \"/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js\";\nimport React, { useState } from \"react\";\nimport { EntriesLog, EntryItem } from './EntriesLog';\nimport { ChangeDateButtons } from \"./ChangeDateButtons\";\nimport \"../Static/Styles/log.css\"; // the api rest framework\n\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(\"/api/entries/\").then(res => {\n        this.setState({\n          entryList: res.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      entryList: [],\n      modal: false,\n      startDate: \"\",\n      endDate: \"\",\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      }\n    }; // this.date= new Date()\n  } // const entry_list = []\n  // we set this in order to render the component \n\n\n  componentDidMount() {\n    this.getDates();\n    this.refreshList();\n    console.log(\"rendering list\");\n  } // componentNeedsUpdate() {\n  //   this.getDates();\n  //   this.refreshList();\n  //   console.log(\"rendering list\")\n  // }\n  // componentNeedsUpdate\n\n\n  getDates() {\n    const now = new Date(2021, 6, 8);\n    const now_month = now.getMonth();\n    const now_year = now.getFullYear();\n    var next_month_date; // const second_date_month = date\n\n    if (now.getMonth() == 11) {\n      next_month_date = new Date(now.getFullYear() + 1, 0, 1);\n    } else {\n      next_month_date = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n    }\n\n    const next_month_month = next_month_date.getMonth();\n    const next_month_year = next_month_date.getFullYear();\n    this.setState({\n      startDate: `${now_year}-${now_month + 1}-01`\n    });\n    this.setState({\n      endDate: `${next_month_year}-${next_month_month + 1}-01`\n    });\n  }\n\n  renderItems() {\n    // we have the dates\n    var start_date = this.state.startDate;\n    var end_date = this.state.endDate;\n    console.log(\"before\");\n    const filteredList = this.state.entryList.filter(function (list) {\n      console.log(list.date >= start_date && list.date < end_date);\n      return list.date >= start_date && list.date < end_date;\n    });\n    console.log(\"after\");\n    console.log(filteredList);\n    console.log(\"after-after\");\n    return filteredList.map(entry => /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"log_table_item_row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, entry.entry_type), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, entry.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, entry.category), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, entry.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"$\", entry.amount)));\n  }\n\n  render() {\n    // const rendered_list = this.state.entryList\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ChangeDateButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table_div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover table-stripped\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"log_table_item_head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Entry type\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, this.renderItems()))));\n  }\n\n}\n\nexport { AppBody };","map":{"version":3,"sources":["/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js"],"names":["React","useState","EntriesLog","EntryItem","ChangeDateButtons","axios","AppBody","Component","constructor","props","refreshList","get","then","res","setState","entryList","data","catch","err","console","log","state","modal","startDate","endDate","activeItem","title","description","completed","componentDidMount","getDates","now","Date","now_month","getMonth","now_year","getFullYear","next_month_date","next_month_month","next_month_year","renderItems","start_date","end_date","filteredList","filter","list","date","map","entry","entry_type","category","amount","render"],"mappings":"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","sourcesContent":["import React,  { useState } from \"react\";\n\nimport {EntriesLog, EntryItem} from './EntriesLog';\nimport {ChangeDateButtons} from \"./ChangeDateButtons\";\n\nimport \"../Static/Styles/log.css\";\n\n// the api rest framework\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entryList: [],\n      modal: false,\n      startDate:\"\",\n      endDate:\"\",\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n    // this.date= new Date()\n  }\n\n// const entry_list = []\n\n  // we set this in order to render the component \n  componentDidMount() {\n    this.getDates();\n    this.refreshList();\n    console.log(\"rendering list\")\n  }\n  // componentNeedsUpdate() {\n  //   this.getDates();\n  //   this.refreshList();\n  //   console.log(\"rendering list\")\n  // }\n\n  // componentNeedsUpdate\n\n\n\n  refreshList = () => {\n\n    axios\n    .get(\"/api/entries/\")\n    .then((res) => { \n      this.setState({entryList: res.data})\n    })\n    .catch((err) => console.log(err));\n  }\n\n  getDates() {\n    const now = new Date(2021,6,8)\n    const now_month = now.getMonth()\n    const now_year = now.getFullYear()\n    var next_month_date\n    // const second_date_month = date\n    if (now.getMonth() == 11) {\n      next_month_date = new Date(now.getFullYear() + 1, 0, 1);\n    } else {\n      next_month_date = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n    }\n    const next_month_month = next_month_date.getMonth()\n    const next_month_year = next_month_date.getFullYear()\n\n    this.setState({startDate:`${now_year}-${now_month+1}-01`})\n    this.setState({endDate:`${next_month_year}-${next_month_month+1}-01`})\n\n\n\n  }\n  \n  renderItems() {\n    // we have the dates\n    var start_date = this.state.startDate\n    var end_date = this.state.endDate\n    console.log(\"before\")\n\n    const filteredList = this.state.entryList.filter(function (list) {\n      console.log(list.date >= start_date  && list.date < end_date)\n      return list.date >= start_date  && list.date < end_date\n    })\n\n    console.log(\"after\")\n    console.log(filteredList)\n    console.log(\"after-after\")\n    \n\n\n    return filteredList.map(\n      (entry) => (\n        \n        <tr className=\"log_table_item_row\">\n          <td>\n            {entry.entry_type}\n          </td>\n          <td >{entry.description}</td>\n          <td>{entry.category}</td>\n          <td>{entry.date}</td>\n          <td>${entry.amount}</td>\n\n        </tr>\n    )\n  )\n  }\n\n\n  render() {\n    \n    // const rendered_list = this.state.entryList\n    \n\n    return (\n    <div className=\"app_body\">\n      \n      \n      \n      <ChangeDateButtons/>\n      <div className=\"table_div\">\n            <table className=\"table table-hover table-stripped\">\n                <thead>\n                    <tr className=\"log_table_item_head\">\n                        <th scope=\"col\">Entry type</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Category</th>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                  {this.renderItems()}\n                </tbody>\n                </table>\n            \n            </div>\n      {/* <EntriesLog>\n        {console.log(rendered_list)}\n        {console.log(\"start: \"+start_date)}\n        {console.log(\"end: \"+end_date)}\n\n\n      </EntriesLog> */}\n    </div>\n    )\n  }\n\n\n\n}\n\nexport {AppBody};"]},"metadata":{},"sourceType":"module"}