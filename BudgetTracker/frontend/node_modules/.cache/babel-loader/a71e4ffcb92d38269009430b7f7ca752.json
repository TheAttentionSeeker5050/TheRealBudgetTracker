{"ast":null,"code":"var _jsxFileName = \"/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js\";\nimport React, { useState } from \"react\";\nimport { EntriesLog, EntryItem } from './EntriesLog';\nimport { ChangeDateButtons } from \"./ChangeDateButtons\"; // the api rest framework\n\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(\"/api/entries/\").then(res => {\n        setEntryList(res.data);\n      }).then(res => console.log(\"rendering list\")).then(() => {\n        const date = new Date();\n        setMonth(date.getMonth());\n        setYear(date.getFullYear());\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      todoList: [],\n      modal: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      }\n    };\n  } // const entry_list = []\n  // we set this in order to render the component \n\n\n  componentDidMount() {\n    this.refreshList();\n  } // componentNeedsUpdate\n  // const [entryList, setEntryList] = useState([])\n  // const [month, setMonth] = useState(\"\")\n  // const [year, setYear] = useState(\"\")\n\n\n  // const date = new Date()\n  // console.log(date.getFullYear());\n  // console.log(date.getMonth());\n  // setMonth(date.getMonth())\n  // we get or refresh list\n  // var startDate = \"2022-01-01\"\n  // var endDate = \"2022-02-01\"\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ChangeDateButtons, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(EntriesLog, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, entryList.filter(function (list) {\n      return list.date >= startDate && list.date < endDate;\n    }).map(entry => /*#__PURE__*/React.createElement(EntryItem, {\n      entry_type: entry.entry_type,\n      description: entry.description,\n      category: entry.category,\n      date: entry.date,\n      amount: entry.amount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport { AppBody };","map":{"version":3,"sources":["/home/nicocaste/projects-web/budget-tracker1.1/TheRealBudgetTracker/BudgetTracker/frontend/src/Components/AppBody.js"],"names":["React","useState","EntriesLog","EntryItem","ChangeDateButtons","axios","AppBody","Component","constructor","props","refreshList","get","then","res","setEntryList","data","console","log","date","Date","setMonth","getMonth","setYear","getFullYear","catch","err","state","todoList","modal","activeItem","title","description","completed","componentDidMount","render","entryList","filter","list","startDate","endDate","map","entry","entry_type","category","amount"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AAEA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,cAApC;AACA,SAAQC,iBAAR,QAAgC,qBAAhC,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,WA3BmB,GA2BL,MAAM;AAElBL,MAAAA,KAAK,CACJM,GADD,CACK,eADL,EAECC,IAFD,CAEOC,GAAD,IAAS;AACbC,QAAAA,YAAY,CAACD,GAAG,CAACE,IAAL,CAAZ;AACD,OAJD,EAKCH,IALD,CAKOC,GAAD,IAAQG,OAAO,CAACC,GAAR,CAAY,gBAAZ,CALd,EAOCL,IAPD,CAOM,MAAM;AACV,cAAMM,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAC,QAAAA,QAAQ,CAACF,IAAI,CAACG,QAAL,EAAD,CAAR;AACAC,QAAAA,OAAO,CAACJ,IAAI,CAACK,WAAL,EAAD,CAAP;AACD,OAXD,EAYCC,KAZD,CAYQC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAZhB;AAaD,KA1CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,EADG;AAEVC,QAAAA,WAAW,EAAE,EAFH;AAGVC,QAAAA,SAAS,EAAE;AAHD;AAHD,KAAb;AASD,GAZmC,CActC;AAEE;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,WAAL;AACD,GAnBmC,CAqBpC;AAEF;AACA;AACA;;;AAyBE;AACA;AACA;AACA;AAIA;AAGA;AACA;AAQAwB,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGC,SAAS,CACPC,MADF,CACS,UAAUC,IAAV,EAAgB;AACtB,aAAOA,IAAI,CAACnB,IAAL,IAAaoB,SAAb,IAA2BD,IAAI,CAACnB,IAAL,GAAYqB,OAA9C;AACD,KAHF,EAIEC,GAJF,CAKIC,KAAD,iBACE,oBAAC,SAAD;AACE,MAAA,UAAU,EAAEA,KAAK,CAACC,UADpB;AAEE,MAAA,WAAW,EAAED,KAAK,CAACV,WAFrB;AAGE,MAAA,QAAQ,EAAEU,KAAK,CAACE,QAHlB;AAIE,MAAA,IAAI,EAAEF,KAAK,CAACvB,IAJd;AAKE,MAAA,MAAM,EAAEuB,KAAK,CAACG,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL,CAFH,CAHF,CADA;AAyBD;;AA/FmC;;AAqGtC,SAAQtC,OAAR","sourcesContent":["import React,  { useState } from \"react\";\n\nimport {EntriesLog, EntryItem} from './EntriesLog';\nimport {ChangeDateButtons} from \"./ChangeDateButtons\";\n\n// the api rest framework\nimport axios from \"axios\";\n\nclass AppBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      modal: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n  }\n\n// const entry_list = []\n\n  // we set this in order to render the component \n  componentDidMount() {\n    this.refreshList();\n  }\n\n  // componentNeedsUpdate\n\n// const [entryList, setEntryList] = useState([])\n// const [month, setMonth] = useState(\"\")\n// const [year, setYear] = useState(\"\")\n\n\n  refreshList = () => {\n\n    axios\n    .get(\"/api/entries/\")\n    .then((res) => { \n      setEntryList(res.data)\n    })\n    .then((res)=> console.log(\"rendering list\"))\n\n    .then(() => {\n      const date = new Date();\n      setMonth(date.getMonth());\n      setYear(date.getFullYear())\n    })\n    .catch((err) => console.log(err));\n  }\n\n\n  \n\n\n  \n  // const date = new Date()\n  // console.log(date.getFullYear());\n  // console.log(date.getMonth());\n  // setMonth(date.getMonth())\n\n  \n\n  // we get or refresh list\n  \n\n  // var startDate = \"2022-01-01\"\n  // var endDate = \"2022-02-01\"\n\n  \n  \n\n  \n\n\n  render() {\n    return (\n    <div className=\"app_body\">\n      <ChangeDateButtons/>\n\n      <EntriesLog>\n        \n        {entryList\n          .filter(function (list) {\n            return list.date >= startDate  && list.date < endDate\n          })\n          .map(\n            (entry) => (\n              <EntryItem\n                entry_type={entry.entry_type}\n                description={entry.description}\n                category={entry.category}\n                date={entry.date}\n                amount={entry.amount}\n              />\n          )\n        )}\n\n      </EntriesLog>\n    </div>\n    )\n  }\n\n\n\n}\n\nexport {AppBody};"]},"metadata":{},"sourceType":"module"}